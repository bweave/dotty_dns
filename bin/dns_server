#!/usr/bin/env ruby

require "rubydns"

INTERFACES = [[:udp, "0.0.0.0", 5300], [:tcp, "0.0.0.0", 5300]].freeze
IN = Resolv::DNS::Resource::IN
# use Cloudflare's public family-friendls DNS servers
UPSTREAM = RubyDNS::Resolver.new([[:udp, "1.1.1.3", 53], [:tcp, "1.0.0.3", 53]])

RubyDNS.run_server(INTERFACES) do
  # log all the things so we can see what's going on
  @logger.level = :debug
  # TIL: this prevents write buffering and forces output immediately
  $stderr.sync = true

  @cache = {}

  match(//, IN::A) do |transaction|
    cached_ip = @cache[transaction.name]
    if cached_ip
      logger.debug "-" * 80
      logger.debug "Cached answer: #{cached_ip}"
      logger.debug "-" * 80
      transaction.respond!(cached_ip)
    else
      next!
    end
  end

  otherwise do |transaction|
    logger.debug "-" * 80
    logger.debug "Asking upstream for #{transaction.name}"
    logger.debug "-" * 80
    transaction.passthrough!(UPSTREAM) do |response|
      if response.answer.first&.[](2).is_a?(IN::A)
        ip = response.answer.first[2].address.to_s
        @cache[transaction.name] = ip
      end
    end
  end
end
